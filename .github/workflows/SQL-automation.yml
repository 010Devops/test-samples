name: Test SQL workflow

on:
  workflow_dispatch:
    inputs:
      Folder_name:
        description: 'Select a SQL folder name'
        required: true
        type: choice
        options:
          - 'Select a Folder'
          - \Database\DB\dbo\Tables\
          - \Database\DB\custom_scripts\
      Dev_SQL_file_name:
        description: 'Enter Dev SQL file name'
        required: true

jobs:
  Test-SQL-Workflow:
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.Folder_name != 'Select a SQL folder name' && github.event.inputs.Dev_SQL_file_name != '' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Validate SQL File Name
        run: |
          if [[ "${{ github.event.inputs.Dev_SQL_file_name }}" != *.sql ]]; then
            echo "Error: The file name must have a .sql extension."
            exit 1
          fi
          
      - name: Set SQL Script Path
        id: set_sql_path
        run:  |
          SQL_SCRIPT_PATH="${{ vars.SCRIPTPATH }}${{ github.event.inputs.Folder_name }}${{ github.event.inputs.Dev_SQL_file_name }}"
          echo "SQL_SCRIPT_PATH=$SQL_SCRIPT_PATH"  >> $GITHUB_ENV

      - name: Test ENV
        run: |
          echo "ENV value: $SQL_SCRIPT_PATH"

      - name: Set Multiple SQL Script Paths
        id: set_sql_paths
        run: |
          set -x
          # Base path
          BASE_PATH="${{ vars.AZURE_SCRIPT_PATH }}${{ github.event.inputs.Folder_name }}"
      
          # Split the comma-separated list into an array
          IFS=',' read -r -a FILE_ARRAY <<< "${{ github.event.inputs.Dev_SQL_file_name }}"
      
          # Initialize an empty JSON array
          FILES_JSON="[]"
      
          # Construct paths for each file and add them to the JSON array
          for FILE_NAME in "${FILE_ARRAY[@]}"; do
            FILE_PATH="${BASE_PATH}${FILE_NAME}"
            FILES_JSON=$(jq --arg path "$FILE_PATH" '. += [$path]' <<< "$FILES_JSON")
            echo "File path set: $FILE_PATH"
          done
      
          # Save the JSON array to the environment variable
          echo "FILES_JSON=$FILES_JSON" >> $GITHUB_ENV
          set +x

      - name: Test ENV
        run: |
          echo "ENV value: $FILES_JSON"
